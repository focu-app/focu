name: 'publish'

on:
  release:
    types: [published]

jobs:
  publish-tauri:
    permissions:
      contents: write

    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: 'macos-latest' # for Arm based macs (M1 and above).
            args: '--target aarch64-apple-darwin'
            rust_targets: 'aarch64-apple-darwin'

    runs-on: ${{ matrix.platform }}

    steps:
      - uses: actions/checkout@v4

      - name: install dependencies (ubuntu only)
        if: matrix.platform == 'ubuntu-22.04'
        run: |
          sudo apt-get update
          sudo apt-get install -y libwebkit2gtk-4.0-dev libwebkit2gtk-4.1-dev libappindicator3-dev librsvg2-dev patchelf

      - name: setup node
        uses: actions/setup-node@v4
        with:
          node-version: lts/*

      - name: install pnpm
        run: npm install -g pnpm

      - name: install Rust stable
        uses: dtolnay/rust-toolchain@stable

      - name: add Rust targets
        if: matrix.rust_targets != ''
        run: rustup target add ${{ matrix.rust_targets }}

      - name: install frontend dependencies
        run: cd apps/desktop && pnpm install

      - name: Build Tauri App
        uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          APPLE_CERTIFICATE: ${{ secrets.APPLE_CERTIFICATE }}
          APPLE_CERTIFICATE_PASSWORD: ${{ secrets.APPLE_CERTIFICATE_PASSWORD }}
          APPLE_SIGNING_IDENTITY: ${{ secrets.APPLE_SIGNING_IDENTITY }}
          APPLE_ID: ${{ secrets.APPLE_ID }}
          APPLE_PASSWORD: ${{ secrets.APPLE_PASSWORD }}
          APPLE_TEAM_ID: ${{ secrets.APPLE_TEAM_ID }}
          TAURI_PRIVATE_KEY: ${{ secrets.TAURI_PRIVATE_KEY }}
          TAURI_KEY_PASSWORD: ${{ secrets.TAURI_KEY_PASSWORD }}
        with:
          projectPath: apps/desktop
          args: ${{ matrix.args }}

      - name: Publish Release to Public Repository
        env:
          PUBLIC_REPO_TOKEN: ${{ secrets.PUBLIC_REPO_TOKEN }}
        run: |
          # Get the built artifacts
          artifacts_dir="apps/desktop/src-tauri/target/release/bundle"
          
          # Create a release in the public repository
          release_response=$(curl -L \
            -X POST \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer $PUBLIC_REPO_TOKEN" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            https://api.github.com/repos/focu-app/focu-app/releases \
            -d '{
              "tag_name":"${{ github.event.release.tag_name }}",
              "name":"${{ github.event.release.name }}",
              "body":"${{ github.event.release.body }}",
              "draft":false,
              "prerelease":${{ github.event.release.prerelease }}
            }')
          
          # Extract the upload URL from the response
          upload_url=$(echo $release_response | jq -r .upload_url | sed 's/{?name,label}//g')
          
          # Upload each artifact to the release
          for artifact in $artifacts_dir/**/*; do
            if [ -f "$artifact" ]; then
              filename=$(basename "$artifact")
              curl -L \
                -X POST \
                -H "Accept: application/vnd.github+json" \
                -H "Authorization: Bearer $PUBLIC_REPO_TOKEN" \
                -H "X-GitHub-Api-Version: 2022-11-28" \
                -H "Content-Type: application/octet-stream" \
                "${upload_url}?name=${filename}" \
                --data-binary "@$artifact"
            fi
          done